@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 47 52% 91%;
    --foreground: 201 73% 19%;

    --card: 47 52% 91%;
    --card-foreground: 201 73% 19%;

    --popover: 47 52% 91%;
    --popover-foreground: 201 73% 19%;

    --primary: 201 73% 19%;
    --primary-foreground: 47 52% 91%;

    --secondary: 43 95% 49%;
    --secondary-foreground: 201 73% 19%;

    --muted: 47 52% 85%;
    --muted-foreground: 201 73% 19%;

    --accent: 19 88% 45%;
    --accent-foreground: 47 52% 91%;

    --destructive: 5 85% 23%;
    --destructive-foreground: 47 52% 91%;

    --border: 201 73% 30%;
    --input: 201 73% 30%;
    --ring: 43 95% 49%;

    --radius: 0.5rem;

    --sidebar-background: 47 52% 91%;
    --sidebar-foreground: 201 73% 19%;
    --sidebar-primary: 201 73% 19%;
    --sidebar-primary-foreground: 47 52% 91%;
    --sidebar-accent: 47 52% 85%;
    --sidebar-accent-foreground: 201 73% 19%;
    --sidebar-border: 201 73% 30%;
    --sidebar-ring: 43 95% 49%;
  }

  .dark {
    --background: 201 73% 8%;
    --foreground: 47 52% 95%;

    --card: 201 73% 12%;
    --card-foreground: 47 52% 92%;

    --popover: 201 73% 10%;
    --popover-foreground: 47 52% 95%;

    --primary: 43 95% 55%;
    --primary-foreground: 201 73% 8%;

    --secondary: 19 88% 50%;
    --secondary-foreground: 47 52% 95%;

    --muted: 201 73% 15%;
    --muted-foreground: 47 52% 75%;

    --accent: 43 95% 60%;
    --accent-foreground: 201 73% 8%;

    --destructive: 19 88% 55%;
    --destructive-foreground: 47 52% 95%;

    --border: 201 73% 20%;
    --input: 201 73% 18%;
    --ring: 43 95% 55%;
    
    --sidebar-background: 201 73% 8%;
    --sidebar-foreground: 47 52% 95%;
    --sidebar-primary: 43 95% 55%;
    --sidebar-primary-foreground: 201 73% 8%;
    --sidebar-accent: 201 73% 15%;
    --sidebar-accent-foreground: 47 52% 92%;
    --sidebar-border: 201 73% 20%;
    --sidebar-ring: 43 95% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

/* Custom animations for the typing test */
@keyframes pulse-ring {
  0% {
    transform: scale(0.8);
    opacity: 1;
  }
  100% {
    transform: scale(2.4);
    opacity: 0;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 20px hsl(var(--secondary));
  }
  50% {
    box-shadow: 0 0 40px hsl(var(--secondary)), 0 0 60px hsl(var(--secondary));
  }
}

@keyframes typewriter {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

.pulse-ring {
  animation: pulse-ring 1.5s infinite;
}

.float {
  animation: float 3s ease-in-out infinite;
}

.glow {
  animation: glow 2s ease-in-out infinite;
}

.typewriter {
  overflow: hidden;
  white-space: nowrap;
  animation: typewriter 3s steps(40, end);
}

/* Gradient text effects */
.gradient-text {
  background: linear-gradient(135deg, hsl(var(--secondary)), hsl(var(--accent)));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Glassmorphism effect - improved for dark mode */
.glass {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.dark .glass {
  background: rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* Neon button effect */
.neon-button {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
  border: 1px solid hsl(var(--border));
}

.neon-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: left 0.5s;
}

.dark .neon-button::before {
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
}

.neon-button:hover::before {
  left: 100%;
}

.neon-button:hover {
  box-shadow: 0 0 20px hsl(var(--secondary) / 0.3);
}

.dark .neon-button:hover {
  box-shadow: 0 0 30px hsl(var(--secondary) / 0.5);
}

/* Custom Play Button from Uiverse.io */
.play-button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  padding: 0 10px;
  color: white;
  text-shadow: 2px 2px rgb(116, 116, 116);
  text-transform: uppercase;
  cursor: pointer;
  border: solid 2px black;
  letter-spacing: 1px;
  font-weight: 600;
  font-size: 17px;
  background-color: hsl(49deg 98% 60%);
  border-radius: 50px;
  position: relative;
  overflow: hidden;
  transition: all 0.5s ease;
}

.play-button:active {
  transform: scale(0.9);
  transition: all 100ms ease;
}

.play-button svg {
  transition: all 0.5s ease;
  z-index: 2;
}

.play {
  transition: all 0.5s ease;
  transition-delay: 300ms;
}

.play-button:hover svg {
  transform: scale(3) translate(50%);
}

.now {
  position: absolute;
  left: 0;
  transform: translateX(-100%);
  transition: all 0.5s ease;
  z-index: 2;
}

.play-button:hover .now {
  transform: translateX(10px);
  transition-delay: 300ms;
}

.play-button:hover .play {
  transform: translateX(200%);
  transition-delay: 300ms;
}

/* Theme Toggle from Uiverse.io - Enhanced for better dark mode */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch #input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: hsl(var(--secondary));
  -webkit-transition: 0.4s;
  transition: 0.4s;
  z-index: 0;
  overflow: hidden;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.sun-moon {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: hsl(var(--accent));
  -webkit-transition: 0.4s;
  transition: 0.4s;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

#input:checked + .slider {
  background-color: hsl(var(--primary));
}

#input:focus + .slider {
  box-shadow: 0 0 1px hsl(var(--ring));
}

#input:checked + .slider .sun-moon {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
  background-color: hsl(var(--foreground));
  -webkit-animation: rotate-center 0.6s ease-in-out both;
  animation: rotate-center 0.6s ease-in-out both;
}

.moon-dot {
  opacity: 0;
  transition: 0.4s;
  fill: gray;
}

#input:checked + .slider .sun-moon .moon-dot {
  opacity: 1;
}

.slider.round {
  border-radius: 34px;
}

.slider.round .sun-moon {
  border-radius: 50%;
}

#moon-dot-1 {
  left: 10px;
  top: 3px;
  position: absolute;
  width: 6px;
  height: 6px;
  z-index: 4;
}

#moon-dot-2 {
  left: 2px;
  top: 10px;
  position: absolute;
  width: 10px;
  height: 10px;
  z-index: 4;
}

#moon-dot-3 {
  left: 16px;
  top: 18px;
  position: absolute;
  width: 3px;
  height: 3px;
  z-index: 4;
}

#light-ray-1 {
  left: -8px;
  top: -8px;
  position: absolute;
  width: 43px;
  height: 43px;
  z-index: -1;
  fill: white;
  opacity: 10%;
}

#light-ray-2 {
  left: -50%;
  top: -50%;
  position: absolute;
  width: 55px;
  height: 55px;
  z-index: -1;
  fill: white;
  opacity: 10%;
}

#light-ray-3 {
  left: -18px;
  top: -18px;
  position: absolute;
  width: 60px;
  height: 60px;
  z-index: -1;
  fill: white;
  opacity: 10%;
}

.cloud-light {
  position: absolute;
  fill: #eee;
  animation-name: cloud-move;
  animation-duration: 6s;
  animation-iteration-count: infinite;
}

.cloud-dark {
  position: absolute;
  fill: #ccc;
  animation-name: cloud-move;
  animation-duration: 6s;
  animation-iteration-count: infinite;
  animation-delay: 1s;
}

#cloud-1 {
  left: 30px;
  top: 15px;
  width: 40px;
}

#cloud-2 {
  left: 44px;
  top: 10px;
  width: 20px;
}

#cloud-3 {
  left: 18px;
  top: 24px;
  width: 30px;
}

#cloud-4 {
  left: 36px;
  top: 18px;
  width: 40px;
}

#cloud-5 {
  left: 48px;
  top: 14px;
  width: 20px;
}

#cloud-6 {
  left: 22px;
  top: 26px;
  width: 30px;
}

@keyframes cloud-move {
  0% {
    transform: translateX(0px);
  }
  40% {
    transform: translateX(4px);
  }
  80% {
    transform: translateX(-4px);
  }
  100% {
    transform: translateX(0px);
  }
}

.stars {
  transform: translateY(-32px);
  opacity: 0;
  transition: 0.4s;
}

.star {
  fill: white;
  position: absolute;
  -webkit-transition: 0.4s;
  transition: 0.4s;
  animation-name: star-twinkle;
  animation-duration: 2s;
  animation-iteration-count: infinite;
}

#input:checked + .slider .stars {
  -webkit-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  opacity: 1;
}

#star-1 {
  width: 20px;
  top: 2px;
  left: 3px;
  animation-delay: 0.3s;
}

#star-2 {
  width: 6px;
  top: 16px;
  left: 3px;
}

#star-3 {
  width: 12px;
  top: 20px;
  left: 10px;
  animation-delay: 0.6s;
}

#star-4 {
  width: 18px;
  top: 0px;
  left: 18px;
  animation-delay: 1.3s;
}

@keyframes star-twinkle {
  0% {
    transform: scale(1);
  }
  40% {
    transform: scale(1.2);
  }
  80% {
    transform: scale(0.8);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes rotate-center {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Enhanced dark mode specific styles */
.dark {
  color-scheme: dark;
}

.dark .gradient-text {
  background: linear-gradient(135deg, hsl(var(--accent)), hsl(var(--secondary)));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Better typing area contrast in dark mode */
.dark .typing-area {
  background: rgba(255, 255, 255, 0.02);
  border: 2px solid hsl(var(--border));
}

.dark .typing-area:focus-within {
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 2px hsl(var(--ring) / 0.2);
}

/* Enhanced card styles for dark mode */
.dark .card-enhanced {
  background: linear-gradient(145deg, hsl(var(--card)), hsl(var(--muted)));
  border: 1px solid hsl(var(--border));
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

/* Better text contrast indicators */
.dark .text-correct {
  background-color: hsl(120 50% 25%);
  color: hsl(120 60% 70%);
}

.dark .text-incorrect {
  background-color: hsl(0 50% 25%);
  color: hsl(0 60% 70%);
}

.dark .text-current {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}
